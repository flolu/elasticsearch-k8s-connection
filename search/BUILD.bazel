load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")

package(default_visibility = ["//visibility:public"])

ts_library(
    name = "lib",
    srcs = glob(
        include = ["**/*.ts"],
        exclude = ["**/*.spec.ts"],
    ),
    deps = [
        "@npm//@elastic/elasticsearch",
        "@npm//@types/express",
        "@npm//@types/node",
        "@npm//express",
    ],
)

nodejs_image(
    name = "image",
    data = [":lib"],
    entry_point = ":index.ts",
)

k8s_deploy(
    name = "search",
    images = {"search:placeholder_name": ":image"},
    template = ":search.yaml",
)

k8s_deploy(
    name = "elasticsearch",
    template = ":elasticsearch.yaml",
)

k8s_deploy(
    name = "ingress",
    template = ":ingress.yaml",
)

k8s_objects(
    name = "k8s",
    objects = [
        ":search",
        ":elasticsearch",
        ":ingress",
    ],
)
